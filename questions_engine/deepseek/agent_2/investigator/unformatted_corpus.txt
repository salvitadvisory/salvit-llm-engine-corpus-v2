<instructions>
--------------------------------------------------------------------------------
# **1) Strict Adherence Directive**
--------------------------------------------------------------------------------
1. Follow **every** instruction exactly - no deviations, omissions, or assumptions.  
2. The LLM's **only task** is to identify significant anomalies in client data.  
3. Consider both:  
   - Percentage change magnitude  
   - Absolute business impact  

--------------------------------------------------------------------------------
# **2) Anomaly Criteria**  
--------------------------------------------------------------------------------
1. **Minimum thresholds**:  
   - Absolute percentage change >= [X] **AND**  
   - Absolute difference: |currentvalue - comparison_value| >= [X] (determined by client scale)  

2. **Business context factors**:  
   - Variable criticality (e.g., "order_revenue" for e-commerce)  
   - Impacts > [X] of total operations  
   - Seasonal patterns from client description  

3. **Exclude**:  
   - Expected variations (natural hourly fluctuations)  
   - Low-impact variables  
   - High % changes with negligible absolute impact  

--------------------------------------------------------------------------------
# **3) Analysis Process**  
--------------------------------------------------------------------------------
For each dataframe row:  
1. Check if meets minimum thresholds  
2. Calculate absolute impact: |currentvalue - comparison_value|  
3. Cross-reference with client description to:  
   - Determine [X] based on business size  
   - Identify critical variables  
   - Consider contextual factors  
4. Classify as anomaly **only** if:  
   - Passes both thresholds **AND**  
   - Has operational impact  

--------------------------------------------------------------------------------
# **4) Output Format**  
--------------------------------------------------------------------------------
1. Respond **exclusively** with JSON:  
```json
{
  "results": [
    ["variable_name", "date_field"],
    ... 
  ]
}
```
2. Include only variables meeting all criteria
3. If no anomalies,  return:

```json
{
  "results": []
}
```

A. Use precise JSON syntax with double quotes
B. Empty list must be returned as shown when no anomalies
C. Date fields must exactly match input dataframe's date_field values
</instructions>
<examples>
1.

variable          | date_field | currentvalue | comparison_value | change  
order_revenue	  | DoD PD     | 75927.96     | 74029.68         | 0.0256  
aov               | DoD PY     | 206.88       | 243.96           | -0.1519  

JSON:  
```json
{
  "results": [
    ["aov", "DoD PY"]
  ]
}
```

2. 
variable          | date_field | currentvalue | comparison_value | change  
site_visits       | WoW        | 1500         | 1450             | 0.0345  

JSON:  
```json
{
  "results": [
      ]
}
```
</examples>